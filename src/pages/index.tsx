import { Environment, OrbitControls } from "@react-three/drei";
import { Canvas, useFrame, useThree } from "@react-three/fiber";
import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import * as THREE from "three";
import { Model as R001_01 } from "../components/R001_01";
import { Model as R001_02 } from "../components/R001_02";

function Controls() {
  THREE.ColorManagement.enabled = true;

  const controls = useRef();
  const { camera, gl, set, size } = useThree();
  //@ts-ignore
  useFrame(() => controls.current?.update());

  useEffect(() => {
    const aspect = size.width / size.height;
    const orthoCamera = new THREE.OrthographicCamera(
      -aspect,
      aspect,
      1,
      -1,
      0.1,
      100,
    );
    orthoCamera.position.z = 10;
    set({ camera: orthoCamera });
  }, [set, size]);

  //@ts-ignore
  return <OrbitControls ref={controls} args={[camera, gl.domElement]} />;
}
export default function Home() {
  let modelScale = 0.5;
  const [renderer, setRenderer] = useState(null);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen min-h-screen w-full flex-col items-center justify-center bg-black">
        <Canvas className="h-full w-full" gl={{ preserveDrawingBuffer: true }}>
          <ambientLight />
          <R001_01 scale={[modelScale, modelScale, modelScale]} />
          <Environment files="./Studio-White-Soft.hdr" background={false} />
          <Controls />
          {/* <InnerComponent setRenderer={setRenderer} /> */}
        </Canvas>
        {/* <CaptureButton renderer={renderer} /> */}
        <Canvas className="h-full w-full">
          <ambientLight />
          <R001_02 scale={[modelScale, modelScale, modelScale]} />
          <Environment files="./Studio-White-Soft.hdr" background={false} />
          <Controls />
        </Canvas>
      </main>
    </>
  );
}

// const InnerComponent = ({ setRenderer }) => {
//   const { gl } = useThree();
//   setRenderer(gl);
//   return null;
// };

// const CaptureButton = ({ renderer }) => {
//   const captureScene = () => {
//     if (!renderer) return;
//     const canvas = renderer.domElement;
//     const imgData = canvas.toDataURL("image/png");
//     const a = document.createElement("a");
//     a.href = imgData;
//     a.download = "screenshot.png";
//     document.body.appendChild(a);
//     a.click();
//     document.body.removeChild(a);
//   };

//   return (
//     <button
//       style={{ color: "white", backgroundColor: "black" }}
//       onClick={captureScene}
//     >
//       Capture
//     </button>
//   );
// };
